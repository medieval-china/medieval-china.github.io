"use strict";function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var _util=require("../../shared/util.js"),_api=require("../../display/api.js"),_message_handler=require("../../shared/message_handler.js");describe("message_handler",function(){function o(e){return Promise.resolve().then(function(){return e&&o(e-1)})}describe("sendWithStream",function(){it("should return a ReadableStream",function(){var e=new _api.LoopbackPort,n=new _message_handler.MessageHandler("main","worker",e).sendWithStream("fakeHandler");expect(_typeof(n)).toEqual("object"),expect(_typeof(n.getReader)).toEqual("function")}),it("should read using a reader",function(n){var t="",e=new _api.LoopbackPort,r=new _message_handler.MessageHandler("main","worker",e);new _message_handler.MessageHandler("worker","main",e).on("fakeHandler",function(e,n){return n.onPull=function(){t+="p"},n.onCancel=function(e){t+="c"},n.ready.then(function(){return n.enqueue("hi"),n.ready}).then(function(){n.close()}),o(5)});var a=r.sendWithStream("fakeHandler",{},{highWaterMark:1,size:function(){return 1}}).getReader();o(10).then(function(){return expect(t).toEqual(""),a.read()}).then(function(e){return expect(t).toEqual("p"),expect(e.value).toEqual("hi"),expect(e.done).toEqual(!1),o(10)}).then(function(){return a.read()}).then(function(e){expect(e.value).toEqual(void 0),expect(e.done).toEqual(!0),n()})}),it("should not read any data when cancelled",function(e){var t="",n=new _api.LoopbackPort;new _message_handler.MessageHandler("worker","main",n).on("fakeHandler",function(e,n){n.onPull=function(){t+="p"},n.onCancel=function(e){t+="c"},t+="0",n.ready.then(function(){return t+="1",n.enqueue([1,2,3,4],4),n.ready}).then(function(){return t+="2",n.enqueue([5,6,7,8],4),n.ready}).then(function(){t+="3",n.close()},function(){t+="4"})});var r=new _message_handler.MessageHandler("main","worker",n).sendWithStream("fakeHandler",{},{highWaterMark:4,size:function(e){return e.length}}).getReader();o(10).then(function(){return expect(t).toEqual("01"),r.read()}).then(function(e){return expect(e.value).toEqual([1,2,3,4]),expect(e.done).toEqual(!1),o(10)}).then(function(){return expect(t).toEqual("01p2"),r.cancel(new _util.AbortException("reader cancelled."))}).then(function(){expect(t).toEqual("01p2c4"),e()})}),it("should not read when errored",function(n){var t="",e=new _api.LoopbackPort;new _message_handler.MessageHandler("worker","main",e).on("fakeHandler",function(e,n){n.onPull=function(){t+="p"},n.onCancel=function(e){t+="c"},t+="0",n.ready.then(function(){return t+="1",n.enqueue([1,2,3,4],4),n.ready}).then(function(){t+="e",n.error(new Error("should not read when errored"))})});var r=new _message_handler.MessageHandler("main","worker",e).sendWithStream("fakeHandler",{},{highWaterMark:4,size:function(e){return e.length}}).getReader();o(10).then(function(){return expect(t).toEqual("01"),r.read()}).then(function(e){return expect(e.value).toEqual([1,2,3,4]),expect(e.done).toEqual(!1),r.read()}).catch(function(e){expect(t).toEqual("01pe"),expect(e instanceof _util.UnknownErrorException).toEqual(!0),expect(e.message).toEqual("should not read when errored"),n()})}),it("should read data with blocking promise",function(n){var t="",e=new _api.LoopbackPort;new _message_handler.MessageHandler("worker","main",e).on("fakeHandler",function(e,n){n.onPull=function(){t+="p"},n.onCancel=function(e){t+="c"},t+="0",n.ready.then(function(){return t+="1",n.enqueue([1,2,3,4],4),n.ready}).then(function(){return t+="2",n.enqueue([5,6,7,8],4),n.ready}).then(function(){n.close()})});var r=new _message_handler.MessageHandler("main","worker",e).sendWithStream("fakeHandler",{},{highWaterMark:4,size:function(e){return e.length}}).getReader();o(10).then(function(){return expect(t).toEqual("01"),r.read()}).then(function(e){return expect(e.value).toEqual([1,2,3,4]),expect(e.done).toEqual(!1),o(10)}).then(function(){return expect(t).toEqual("01p2"),r.read()}).then(function(e){return expect(e.value).toEqual([5,6,7,8]),expect(e.done).toEqual(!1),o(10)}).then(function(){return expect(t).toEqual("01p2p"),r.read()}).then(function(e){expect(e.value).toEqual(void 0),expect(e.done).toEqual(!0),n()})}),it("should read data with blocking promise and buffer whole data into stream",function(n){var t="",e=new _api.LoopbackPort;new _message_handler.MessageHandler("worker","main",e).on("fakeHandler",function(e,n){return n.onPull=function(){t+="p"},n.onCancel=function(e){t+="c"},t+="0",n.ready.then(function(){return t+="1",n.enqueue([1,2,3,4],4),n.ready}).then(function(){return t+="2",n.enqueue([5,6,7,8],4),n.ready}).then(function(){n.close()}),o(10)});var r=new _message_handler.MessageHandler("main","worker",e).sendWithStream("fakeHandler",{},{highWaterMark:8,size:function(e){return e.length}}).getReader();o(10).then(function(){return expect(t).toEqual("012"),r.read()}).then(function(e){return expect(e.value).toEqual([1,2,3,4]),expect(e.done).toEqual(!1),o(10)}).then(function(){return expect(t).toEqual("012p"),r.read()}).then(function(e){return expect(e.value).toEqual([5,6,7,8]),expect(e.done).toEqual(!1),o(10)}).then(function(){return expect(t).toEqual("012p"),r.read()}).then(function(e){expect(e.value).toEqual(void 0),expect(e.done).toEqual(!0),n()})}),it("should ignore any pull after close is called",function(n){var t="",e=new _api.LoopbackPort,r=(0,_util.createPromiseCapability)();new _message_handler.MessageHandler("worker","main",e).on("fakeHandler",function(e,n){return n.onPull=function(){t+="p"},n.onCancel=function(e){t+="c"},t+="0",n.ready.then(function(){t+="1",n.enqueue([1,2,3,4],4)}),r.promise.then(function(){n.close()})});var a=new _message_handler.MessageHandler("main","worker",e).sendWithStream("fakeHandler",{},{highWaterMark:10,size:function(e){return e.length}}).getReader();o(10).then(function(){return expect(t).toEqual("01"),r.resolve(),r.promise.then(function(){return a.read()})}).then(function(e){return expect(e.value).toEqual([1,2,3,4]),expect(e.done).toEqual(!1),o(10)}).then(function(){return expect(t).toEqual("01"),a.read()}).then(function(e){expect(e.value).toEqual(void 0),expect(e.done).toEqual(!0),n()})})})});