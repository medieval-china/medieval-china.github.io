"use strict";var _murmurhash=require("../../core/murmurhash3.js");describe("MurmurHash3_64",function(){it("instantiates without seed",function(){var e=new _murmurhash.MurmurHash3_64;expect(e).toEqual(jasmine.any(_murmurhash.MurmurHash3_64))}),it("instantiates with seed",function(){var e=new _murmurhash.MurmurHash3_64(1);expect(e).toEqual(jasmine.any(_murmurhash.MurmurHash3_64))});var r="f61cfdbfdae0f65e",t="test",a=[116,101,115,116];it("correctly generates a hash from a string",function(){var e=new _murmurhash.MurmurHash3_64;e.update(t),expect(e.hexdigest()).toEqual(r)}),it("correctly generates a hash from a Uint8Array",function(){var e=new _murmurhash.MurmurHash3_64;e.update(new Uint8Array(a)),expect(e.hexdigest()).toEqual(r)}),it("correctly generates a hash from a Uint32Array",function(){var e=new _murmurhash.MurmurHash3_64;e.update(new Uint32Array(new Uint8Array(a).buffer)),expect(e.hexdigest()).toEqual(r)}),it("changes the hash after update without seed",function(){var e=new _murmurhash.MurmurHash3_64;e.update(t);var r=e.hexdigest();e.update(t);var a=e.hexdigest();expect(r).not.toEqual(a)}),it("changes the hash after update with seed",function(){var e=new _murmurhash.MurmurHash3_64(1);e.update(t);var r=e.hexdigest();e.update(t);var a=e.hexdigest();expect(r).not.toEqual(a)}),it("generates correct hashes for TypedArrays which share the same underlying ArrayBuffer (issue 12533)",function(){var e=new Uint8Array([0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]),r=new Uint8Array(e.buffer,0,10),a=new Uint8Array(e.buffer,10,10);expect(r).not.toEqual(a);var t=new _murmurhash.MurmurHash3_64;t.update(r);var u=t.hexdigest(),h=new _murmurhash.MurmurHash3_64;h.update(a);var s=h.hexdigest();expect(u).not.toEqual(s),expect(u).toEqual("a49de339cc5b0819"),expect(s).toEqual("f81a92d9e214ab35")})});