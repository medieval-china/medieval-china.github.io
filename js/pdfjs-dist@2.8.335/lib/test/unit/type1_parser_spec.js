"use strict";var _fonts=require("../../core/fonts.js"),_stream=require("../../core/stream.js"),_type1_parser=require("../../core/type1_parser.js");describe("Type1Parser",function(){it("splits tokens",function(){var e=new _stream.StringStream("/BlueValues[-17 0]noaccess def"),t=new _type1_parser.Type1Parser(e,!1,_fonts.SEAC_ANALYSIS_ENABLED);expect(t.getToken()).toEqual("/"),expect(t.getToken()).toEqual("BlueValues"),expect(t.getToken()).toEqual("["),expect(t.getToken()).toEqual("-17"),expect(t.getToken()).toEqual("0"),expect(t.getToken()).toEqual("]"),expect(t.getToken()).toEqual("noaccess"),expect(t.getToken()).toEqual("def"),expect(t.getToken()).toEqual(null)}),it("handles glued tokens",function(){var e=new _stream.StringStream("dup/CharStrings"),t=new _type1_parser.Type1Parser(e,!1,_fonts.SEAC_ANALYSIS_ENABLED);expect(t.getToken()).toEqual("dup"),expect(t.getToken()).toEqual("/"),expect(t.getToken()).toEqual("CharStrings")}),it("ignores whitespace",function(){var e=new _stream.StringStream("\nab   c\t"),t=new _type1_parser.Type1Parser(e,!1,_fonts.SEAC_ANALYSIS_ENABLED);expect(t.getToken()).toEqual("ab"),expect(t.getToken()).toEqual("c")}),it("parses numbers",function(){var e=new _stream.StringStream("123"),t=new _type1_parser.Type1Parser(e,!1,_fonts.SEAC_ANALYSIS_ENABLED);expect(t.readNumber()).toEqual(123)}),it("parses booleans",function(){var e=new _stream.StringStream("true false"),t=new _type1_parser.Type1Parser(e,!1,_fonts.SEAC_ANALYSIS_ENABLED);expect(t.readBoolean()).toEqual(1),expect(t.readBoolean()).toEqual(0)}),it("parses number arrays",function(){var e=new _stream.StringStream("[1 2]"),t=new _type1_parser.Type1Parser(e,!1,_fonts.SEAC_ANALYSIS_ENABLED);expect(t.readNumberArray()).toEqual([1,2]),e=new _stream.StringStream("[ 1 2 ]"),t=new _type1_parser.Type1Parser(e,!1,_fonts.SEAC_ANALYSIS_ENABLED),expect(t.readNumberArray()).toEqual([1,2])}),it("skips comments",function(){var e=new _stream.StringStream("%!PS-AdobeFont-1.0: CMSY10 003.002\n%%Title: CMSY10\n%Version: 003.002\nFontDirectory"),t=new _type1_parser.Type1Parser(e,!1,_fonts.SEAC_ANALYSIS_ENABLED);expect(t.getToken()).toEqual("FontDirectory")}),it("parses font program",function(){var e=new _stream.StringStream("/ExpansionFactor  99\n/Subrs 1 array\ndup 0 1 RD x noaccess put\nend\n/CharStrings 46 dict dup begin\n/.notdef 1 RD x ND\nend"),t=new _type1_parser.Type1Parser(e,!1,_fonts.SEAC_ANALYSIS_ENABLED).extractFontProgram({});expect(t.charstrings.length).toEqual(1),expect(t.properties.privateData.ExpansionFactor).toEqual(99)}),it("parses font header font matrix",function(){var e=new _stream.StringStream("/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def\n"),t={};new _type1_parser.Type1Parser(e,!1,_fonts.SEAC_ANALYSIS_ENABLED).extractFontHeader(t),expect(t.fontMatrix).toEqual([.001,0,0,.001,0,0])}),it("parses font header encoding",function(){var e=new _stream.StringStream("/Encoding 256 array\n0 1 255 {1 index exch /.notdef put} for\ndup 33 /arrowright put\nreadonly def\n"),t={overridableEncoding:!0};new _type1_parser.Type1Parser(e,!1,_fonts.SEAC_ANALYSIS_ENABLED).extractFontHeader(t),expect(t.builtInEncoding[33]).toEqual("arrowright")})});