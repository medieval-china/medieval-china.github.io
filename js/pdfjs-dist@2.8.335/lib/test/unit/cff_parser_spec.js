"use strict";var _cff_parser=require("../../core/cff_parser.js"),_fonts=require("../../core/fonts.js"),_stream=require("../../core/stream.js");describe("CFFParser",function(){function r(e){var t=Object.create(null);for(var r in e)t[r]=e[r];return t}var s,a,n,c={getByName:function(e){return 0}};beforeAll(function(e){for(var t="0100040100010101134142434445462b54696d65732d526f6d616e000101011ff81b00f81c02f81d03f819041c6f000dfb3cfb6efa7cfa1605e911b8f112000301010813183030312e30303754696d657320526f6d616e54696d657300000002010102030e0e7d99f92a99fb7695f7738b06f79a93fc7c8c077d99f85695f75e9908fb6e8cf87393f7108b09a70adf0bf78e14",r=[],a=0,n=t.length;a<n;a+=2){var c=t.substring(a,a+2);r.push(parseInt(c,16))}s=new _stream.Stream(r),e()}),afterAll(function(){s=null}),beforeEach(function(e){a=new _cff_parser.CFFParser(s,{},_fonts.SEAC_ANALYSIS_ENABLED),n=a.parse(),e()}),afterEach(function(e){a=n=null,e()}),it("parses header",function(){var e=n.header;expect(e.major).toEqual(1),expect(e.minor).toEqual(0),expect(e.hdrSize).toEqual(4),expect(e.offSize).toEqual(1)}),it("parses name index",function(){var e=n.names;expect(e.length).toEqual(1),expect(e[0]).toEqual("ABCDEF+Times-Roman")}),it("parses string index",function(){var e=n.strings;expect(e.count).toEqual(3),expect(e.get(0)).toEqual(".notdef"),expect(e.get(391)).toEqual("001.007")}),it("parses top dict",function(){var e=n.topDict;expect(e.getByName("version")).toEqual(391),expect(e.getByName("FullName")).toEqual(392),expect(e.getByName("FamilyName")).toEqual(393),expect(e.getByName("Weight")).toEqual(389),expect(e.getByName("UniqueID")).toEqual(28416),expect(e.getByName("FontBBox")).toEqual([-168,-218,1e3,898]),expect(e.getByName("CharStrings")).toEqual(94),expect(e.getByName("Private")).toEqual([45,102])}),it("refuses to add topDict key with invalid value (bug 1068432)",function(){var e=n.topDict,t=e.getByName("UnderlinePosition");e.setByKey(3075,[NaN]),expect(e.getByName("UnderlinePosition")).toEqual(t)}),it("ignores reserved commands in parseDict, and refuses to add privateDict keys with invalid values (bug 1308536)",function(){var e=new Uint8Array([64,39,31,30,252,114,137,115,79,30,197,119,2,99,127,6]);a.bytes=e;var t=n.topDict;t.setByName("Private",[e.length,0]);expect(function(){a.parsePrivateDict(t)}).not.toThrow();var r=t.privateDict;expect(r.getByName("BlueValues")).toBeNull()}),it("parses a CharString having cntrmask",function(){var e=new Uint8Array([0,1,1,0,38,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,1,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,3,20,22,22,14]);a.bytes=e;var t=a.parseIndex(0).obj,r=a.parseCharStrings({charStrings:t,privateDict:c}).charStrings;expect(r.count).toEqual(1),expect(r.get(0).length).toEqual(38)}),it("parses a CharString endchar with 4 args w/seac enabled",function(){var e=new _cff_parser.CFFParser(s,{},!0);e.parse();var t=new Uint8Array([0,1,1,0,237,247,22,247,72,204,247,86,14]);e.bytes=t;var r=e.parseIndex(0).obj,a=e.parseCharStrings({charStrings:r,privateDict:c});expect(a.charStrings.count).toEqual(1),expect(a.charStrings.get(0).length).toEqual(1),expect(a.seacs.length).toEqual(1),expect(a.seacs[0].length).toEqual(4),expect(a.seacs[0][0]).toEqual(130),expect(a.seacs[0][1]).toEqual(180),expect(a.seacs[0][2]).toEqual(65),expect(a.seacs[0][3]).toEqual(194)}),it("parses a CharString endchar with 4 args w/seac disabled",function(){var e=new _cff_parser.CFFParser(s,{},!1);e.parse();var t=new Uint8Array([0,1,1,0,237,247,22,247,72,204,247,86,14]);e.bytes=t;var r=e.parseIndex(0).obj,a=e.parseCharStrings({charStrings:r,privateDict:c});expect(a.charStrings.count).toEqual(1),expect(a.charStrings.get(0).length).toEqual(9),expect(a.seacs.length).toEqual(0)}),it("parses a CharString endchar no args",function(){var e=new Uint8Array([0,1,1,0,14]);a.bytes=e;var t=a.parseIndex(0).obj,r=a.parseCharStrings({charStrings:t,privateDict:c});expect(r.charStrings.count).toEqual(1),expect(r.charStrings.get(0)[0]).toEqual(14),expect(r.seacs.length).toEqual(0)}),it("parses predefined charsets",function(){var e=a.parseCharsets(0,0,null,!0);expect(e.predefined).toEqual(!0)}),it("parses charset format 0",function(){var e=new Uint8Array([0,0,0,0,0,2]);a.bytes=e;var t=a.parseCharsets(3,2,new _cff_parser.CFFStrings,!1);expect(t.charset[1]).toEqual("exclam"),t=a.parseCharsets(3,2,new _cff_parser.CFFStrings,!0),expect(t.charset[1]).toEqual(2)}),it("parses charset format 1",function(){var e=new Uint8Array([0,0,0,1,0,8,1]);a.bytes=e;var t=a.parseCharsets(3,2,new _cff_parser.CFFStrings,!1);expect(t.charset).toEqual([".notdef","quoteright","parenleft"]),t=a.parseCharsets(3,2,new _cff_parser.CFFStrings,!0),expect(t.charset).toEqual([0,8,9])}),it("parses charset format 2",function(){var e=new Uint8Array([0,0,0,2,0,8,0,1]);a.bytes=e;var t=a.parseCharsets(3,2,new _cff_parser.CFFStrings,!1);expect(t.charset).toEqual([".notdef","quoteright","parenleft"]),t=a.parseCharsets(3,2,new _cff_parser.CFFStrings,!0),expect(t.charset).toEqual([0,8,9])}),it("parses encoding format 0",function(){var e=new Uint8Array([0,0,0,1,8]);a.bytes=e;var t=a.parseEncoding(2,{},new _cff_parser.CFFStrings,null);expect(t.encoding).toEqual(r({8:1}))}),it("parses encoding format 1",function(){var e=new Uint8Array([0,0,1,1,7,1]);a.bytes=e;var t=a.parseEncoding(2,{},new _cff_parser.CFFStrings,null);expect(t.encoding).toEqual(r({7:1,8:2}))}),it("parses fdselect format 0",function(){var e=new Uint8Array([0,0,1]);a.bytes=e.slice();var t=a.parseFDSelect(0,2);expect(t.fdSelect).toEqual([0,1]),expect(t.format).toEqual(0)}),it("parses fdselect format 3",function(){var e=new Uint8Array([3,0,2,0,0,9,0,2,10,0,4]);a.bytes=e.slice();var t=a.parseFDSelect(0,4);expect(t.fdSelect).toEqual([9,9,10,10]),expect(t.format).toEqual(3)}),it("parses invalid fdselect format 3 (bug 1146106)",function(){var e=new Uint8Array([3,0,2,0,1,9,0,2,10,0,4]);a.bytes=e.slice();var t=a.parseFDSelect(0,4);expect(t.fdSelect).toEqual([9,9,10,10]),expect(t.format).toEqual(3)})}),describe("CFFCompiler",function(){function o(e){return e=new Uint8Array(e),new _cff_parser.CFFParser({getBytes:function(){return e}},{},_fonts.SEAC_ANALYSIS_ENABLED)}it("encodes integers",function(){var e=new _cff_parser.CFFCompiler;expect(e.encodeInteger(0)).toEqual([139]),expect(e.encodeInteger(100)).toEqual([239]),expect(e.encodeInteger(-100)).toEqual([39]),expect(e.encodeInteger(1e3)).toEqual([250,124]),expect(e.encodeInteger(-1e3)).toEqual([254,124]),expect(e.encodeInteger(1e4)).toEqual([28,39,16]),expect(e.encodeInteger(-1e4)).toEqual([28,216,240]),expect(e.encodeInteger(1e5)).toEqual([29,0,1,134,160]),expect(e.encodeInteger(-1e5)).toEqual([29,255,254,121,96])}),it("encodes floats",function(){var e=new _cff_parser.CFFCompiler;expect(e.encodeFloat(-2.25)).toEqual([30,226,162,95]),expect(e.encodeFloat(5e-11)).toEqual([30,92,17,255])}),it("sanitizes name index",function(){var e=new _cff_parser.CFFCompiler,t=e.compileNameIndex(["[a"]),r=o(t),a=r.parseIndex(0),n=r.parseNameIndex(a.obj);expect(n).toEqual(["_a"]);for(var c="",s=0;s<129;s++)c+="_";a=(r=o(t=e.compileNameIndex([c]))).parseIndex(0),n=r.parseNameIndex(a.obj),expect(n[0].length).toEqual(127)}),it("compiles fdselect format 0",function(){var e=new _cff_parser.CFFFDSelect(0,[3,2,1]),t=(new _cff_parser.CFFCompiler).compileFDSelect(e);expect(t).toEqual([0,3,2,1])}),it("compiles fdselect format 3",function(){var e=new _cff_parser.CFFFDSelect(3,[0,0,1,1]),t=(new _cff_parser.CFFCompiler).compileFDSelect(e);expect(t).toEqual([3,0,2,0,0,0,0,2,1,0,4])}),it("compiles fdselect format 3, single range",function(){var e=new _cff_parser.CFFFDSelect(3,[0,0]),t=(new _cff_parser.CFFCompiler).compileFDSelect(e);expect(t).toEqual([3,0,1,0,0,0,0,2])}),it("compiles charset of CID font",function(){var e=new _cff_parser.CFFCharset,t=(new _cff_parser.CFFCompiler).compileCharset(e,7,new _cff_parser.CFFStrings,!0);expect(t).toEqual([2,0,0,0,6])}),it("compiles charset of non CID font",function(){var e=new _cff_parser.CFFCharset(!1,0,["space","exclam"]),t=(new _cff_parser.CFFCompiler).compileCharset(e,3,new _cff_parser.CFFStrings,!1);expect(t).toEqual([0,0,1,0,2])})});